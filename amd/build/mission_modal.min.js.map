{"version":3,"file":"mission_modal.min.js","sources":["../src/mission_modal.js"],"sourcesContent":["define(['jquery', 'core/ajax', 'core/notification', 'core/modal_factory', 'core/modal_events', 'core/templates'],\n    function($, ajax, notification, ModalFactory, ModalEvents, Templates) {\n\n    return {\n        init: function(blockid, courseid) {\n\n            // Create modal using Moodle's ModalFactory with template\n            ModalFactory.create({\n                type: ModalFactory.types.SAVE_CANCEL,\n                title: 'Add Mission',\n                body: Templates.render('block_mission_map/add_mission_modal', {\n                    blockid: blockid,\n                    courseid: courseid\n                })\n            }).then(function(modal) {\n\n                // Show/hide URL/Activity/Section fields based on mission type\n                modal.getRoot().on('change', '#missionType', function() {\n                    var type = $(this).val();\n                    if (type == '1') { // URL\n                        $('#urlGroup').show();\n                        $('#activityGroup').hide();\n                        $('#sectionGroup').hide();\n                    } else if (type == '2') { // Activity\n                        $('#urlGroup').hide();\n                        $('#activityGroup').show();\n                        $('#sectionGroup').hide();\n                        loadCourseActivities();\n                    } else if (type == '3') { // Section\n                        $('#urlGroup').hide();\n                        $('#activityGroup').hide();\n                        $('#sectionGroup').show();\n                        loadCourseSections();\n                    } else { // Voting\n                        $('#urlGroup').hide();\n                        $('#activityGroup').hide();\n                        $('#sectionGroup').hide();\n                    }\n                });\n\n                // Handle activity search and filtering\n                modal.getRoot().on('input', '#missionActivitySearch', function() {\n                    var searchTerm = $(this).val().toLowerCase();\n                    filterActivities(searchTerm);\n                });\n\n                // Handle clear search button\n                modal.getRoot().on('click', '#clearSearchBtn', function() {\n                    $('#missionActivitySearch').val('');\n                    filterActivities('');\n                });\n\n                // Handle activity selection\n                modal.getRoot().on('change', '#missionActivitySelect', function() {\n                    var selectedOption = $(this).find('option:selected');\n                    var cmid = selectedOption.val();\n                    var url = selectedOption.data('url');\n\n                    if (cmid) {\n                        $('#selectedActivityUrl').val(url);\n                    } else {\n                        $('#selectedActivityUrl').val('');\n                    }\n                });\n\n                /**\n                 * Load course activities into dropdown\n                 */\n                function loadCourseActivities() {\n                    ajax.call([{\n                        methodname: 'block_mission_map_get_course_activities',\n                        args: { courseid: courseid }\n                    }])[0].then(function(response) {\n                        if (response.success && response.activities) {\n                            populateActivityDropdown(response.activities);\n                        }\n                    }).catch(function(error) {\n                        notification.addNotification({\n                            message: 'Error loading activities: ' + error.message,\n                            type: 'error'\n                        });\n                    });\n                }\n\n                // Load course sections into dropdown\n                function loadCourseSections() {\n                    ajax.call([{\n                        methodname: 'block_mission_map_get_course_sections',\n                        args: { courseid: courseid }\n                    }])[0].then(function(response) {\n                        if (response.success && response.sections) {\n                            populateSectionDropdown(response.sections);\n                        } else {\n                            notification.addNotification({\n                                message: 'Invalid response from server',\n                                type: 'error'\n                            });\n                        }\n                    }).catch(function(error) {\n                        notification.addNotification({\n                            message: 'Error loading sections: ' + (error.message || 'Unknown error'),\n                            type: 'error'\n                        });\n                    });\n                }\n\n                /**\n                 * Populate the activity dropdown with grouped sections\n                 * @param {Array} activities\n                 */\n                function populateActivityDropdown(activities) {\n                    var dropdown = modal.getRoot().find('#missionActivitySelect');\n                    dropdown.empty();\n                    dropdown.append('<option value=\"\">{{#str}}select_activity, block_mission_map{{/str}}</option>');\n\n                    activities.forEach(function(section) {\n                        if (section.activities.length > 0) {\n                            // Add section header (disabled option)\n                            dropdown.append('<optgroup label=\"' + section.section_name + '\">');\n\n                            section.activities.forEach(function(activity) {\n                                var option = $('<option></option>')\n                                    .attr('value', activity.id)\n                                    .data('url', activity.url)\n                                    .text(activity.name + ' (' + activity.type + ')');\n                                dropdown.append(option);\n                            });\n\n                            dropdown.append('</optgroup>');\n                        }\n                    });\n                }\n\n                /**\n                 * Populate the section dropdown\n                 * @param {Array} sections\n                 */\n                function populateSectionDropdown(sections) {\n                    var dropdown = modal.getRoot().find('#missionSectionSelect');\n                    dropdown.empty();\n                    dropdown.append('<option value=\"\">{{#str}}select_section, block_mission_map{{/str}}</option>');\n                    \n                    sections.forEach(function(section) {\n                        var option = $('<option></option>')\n                            .attr('value', section.id)\n                            .data('url', section.url)\n                            .text(section.name);\n                        dropdown.append(option);\n                    });\n                }\n\n                /**\n                 * Filter activities based on search term\n                 * @param {string} searchTerm\n                 */\n                function filterActivities(searchTerm) {\n                    var dropdown = modal.getRoot().find('#missionActivitySelect');\n                    var options = dropdown.find('option');\n\n                    options.each(function() {\n                        var option = $(this);\n                        var text = option.text().toLowerCase();\n\n                        if (option.val() === '') {\n                            // Always show the placeholder option\n                            option.show();\n                        } else if (searchTerm === '' || text.includes(searchTerm)) {\n                            option.show();\n                        } else {\n                            option.hide();\n                        }\n                    });\n\n                    // Hide/show optgroups based on visible children\n                    dropdown.find('optgroup').each(function() {\n                        var optgroup = $(this);\n                        var visibleOptions = optgroup.find('option:visible').not('[value=\"\"]');\n\n                        if (visibleOptions.length === 0) {\n                            optgroup.hide();\n                        } else {\n                            optgroup.show();\n                        }\n                    });\n                }\n\n                // Handle section selection\n                modal.getRoot().on('change', '#missionSectionSelect', function() {\n                    var selectedOption = $(this).find('option:selected');\n                    var sectionId = selectedOption.val();\n                    var url = selectedOption.data('url');\n                    \n                    if (sectionId) {\n                        $('#selectedSectionUrl').val(url);\n                    } else {\n                        $('#selectedSectionUrl').val('');\n                    }\n                });\n\n                // Handle save event using Moodle's standard save event\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n\n                    var missionName = modal.getRoot().find('#missionName').val().trim();\n                    var missionType = modal.getRoot().find('#missionType').val();\n                    var missionUrl = modal.getRoot().find('#missionUrl').val();\n                    var selectedActivityId = modal.getRoot().find('#missionActivitySelect').val();\n                    var selectedSectionId = modal.getRoot().find('#missionSectionSelect').val();\n                    var missionColor = modal.getRoot().find('#missionColor').val();\n                    var missionDescription = modal.getRoot().find('#missionDescription').val();\n\n                    if (!missionName) {\n                        notification.addNotification({\n                            message: 'Mission name is required',\n                            type: 'error'\n                        });\n                        return;\n                    }\n\n                    // Validate based on type\n                    if (missionType == '1' && !missionUrl) {\n                        notification.addNotification({\n                            message: 'Mission URL is required for URL type missions',\n                            type: 'error'\n                        });\n                        return;\n                    }\n\n                    if (missionType == '2' && !selectedActivityId) {\n                        notification.addNotification({\n                            message: 'Please select a course activity',\n                            type: 'error'\n                        });\n                        return;\n                    }\n\n                    if (missionType == '3' && !selectedSectionId) {\n                        notification.addNotification({\n                            message: 'Please select a course section',\n                            type: 'error'\n                        });\n                        return;\n                    }\n\n                    var editingChapterId = modal.getRoot().data('editing-chapter-id');\n                    var editingMissionId = modal.getRoot().data('editing-mission-id');\n\n                    // Prepare data\n                    var data = {\n                        blockid: blockid,\n                        courseid: courseid,\n                        chapterid: editingChapterId,\n                        name: missionName,\n                        description: missionDescription,\n                        type: parseInt(missionType),\n                        color: missionColor,\n                        url: missionType == '1' ? missionUrl : (missionType == '2' ? modal.getRoot().find('#selectedActivityUrl').val() : (missionType == '3' ? modal.getRoot().find('#selectedSectionUrl').val() : null)),\n                        cmid: missionType == '2' ? selectedActivityId : null,\n                        sectionid: missionType == '3' ? selectedSectionId : null\n                    };\n\n                    // Add mission ID if editing\n                    if (editingMissionId) {\n                        data.levelid = editingMissionId;\n                    }\n\n                    // Show loading state\n                    modal.getRoot().find('[data-action=\"save\"]').prop('disabled', true).text('Saving...');\n\n                    // Make AJAX call to create or update mission\n                    ajax.call([{\n                        methodname: 'block_mission_map_create_level',\n                        args: data\n                    }])[0].then(function(response) {\n                        if (response.success) {\n                            notification.addNotification({\n                                message: editingMissionId ? 'Mission updated successfully!' : 'Mission created successfully!',\n                                type: 'success'\n                            });\n\n                            // Close modal and reload page\n                            modal.hide();\n                            setTimeout(function() {\n                                window.location.reload();\n                            }, 1000);\n                        } else {\n                            var errorMsg = editingMissionId ? 'Error updating mission' : 'Error creating mission';\n                            notification.addNotification({\n                                message: response.message || errorMsg,\n                                type: 'error'\n                            });\n                        }\n                    }).catch(function(error) {\n                        notification.addNotification({\n                            message: 'Error saving mission: ' + error.message,\n                            type: 'error'\n                        });\n                    }).always(function() {\n                        // Reset button state\n                        modal.getRoot().find('[data-action=\"save\"]').prop('disabled', false).text('Save');\n                    });\n                });\n\n                // Reset form when modal is closed\n                modal.getRoot().on(ModalEvents.hidden, function() {\n                    var form = modal.getRoot().find('#addMissionForm')[0];\n                    if (form) {\n                        form.reset();\n                    }\n                    modal.getRoot().find('#urlGroup').show();\n                    modal.getRoot().find('#activityGroup').hide();\n                    modal.getRoot().find('#sectionGroup').hide();\n                    modal.getRoot().find('#missionActivitySearch').val('');\n                    modal.getRoot().find('#missionActivitySelect').val('');\n                    modal.getRoot().find('#missionSectionSelect').val('');\n                });\n\n                // Show modal when \"Add Mission\" button is clicked\n                $(document).on('click', '.add-mission-btn', function(e) {\n                    e.preventDefault();\n                    var chapterId = $(this).data('chapter-id');\n                    var chapterName = $(this).data('chapter-name');\n\n                    // Store chapter ID for mission creation\n                    modal.getRoot().data('editing-chapter-id', chapterId);\n                    modal.getRoot().data('editing-mission-id', null); // Clear any existing mission ID\n\n                    // Update modal title with chapter name\n                    modal.getRoot().find('.modal-title').text('Add Mission to: ' + chapterName);\n\n                    // Reset form\n                    var form = modal.getRoot().find('#addMissionForm')[0];\n                    if (form) {\n                        form.reset();\n                    }\n                    modal.getRoot().find('#urlGroup').show();\n                    modal.getRoot().find('#activityGroup').hide();\n                    modal.getRoot().find('#sectionGroup').hide();\n\n                    modal.show();\n                });\n\n                // Handle mission clicks to show/hide action buttons\n                $(document).on('click', '.mission', function(e) {\n                    e.preventDefault();\n                    \n                    // Hide all other action buttons\n                    $('.mission-actions').hide();\n                    \n                    // Show action buttons for this mission\n                    $(this).siblings('.mission-actions').show();\n                });\n\n                // Handle view button clicks\n                $(document).on('click', '.mission-view-btn', function(e) {\n                    e.preventDefault();\n                    var url = $(this).data('url');\n                    window.open(url, '_blank');\n                });\n\n                // Handle edit mission buttons\n                $(document).on('click', '.mission-edit-btn', function(e) {\n                    e.preventDefault();\n                    var missionId = $(this).data('mission-id');\n                    var missionName = $(this).data('mission-name');\n                    var missionDescription = $(this).data('mission-description');\n                    var missionType = $(this).data('mission-type');\n                    var missionUrl = $(this).data('mission-url');\n                    var missionColor = $(this).data('mission-color');\n                    var chapterId = $(this).data('chapter-id');\n\n                    // Store mission ID for update\n                    modal.getRoot().data('editing-mission-id', missionId);\n                    modal.getRoot().data('editing-chapter-id', chapterId);\n\n                    // Update modal title\n                    modal.getRoot().find('.modal-title').text('Edit Mission: ' + missionName);\n\n                    // Populate form with existing data\n                    modal.getRoot().find('#missionName').val(missionName);\n                    modal.getRoot().find('#missionDescription').val(missionDescription);\n                    modal.getRoot().find('#missionColor').val(missionColor);\n                    modal.getRoot().find('#missionType').val(missionType);\n\n                    // Show/hide appropriate fields based on type\n                    if (missionType == '1') { // URL\n                        modal.getRoot().find('#urlGroup').show();\n                        modal.getRoot().find('#activityGroup').hide();\n                        modal.getRoot().find('#sectionGroup').hide();\n                        modal.getRoot().find('#missionUrl').val(missionUrl);\n                    } else if (missionType == '2') { // Activity\n                        modal.getRoot().find('#urlGroup').hide();\n                        modal.getRoot().find('#activityGroup').show();\n                        modal.getRoot().find('#sectionGroup').hide();\n                        loadCourseActivities();\n                        // Set the activity URL in the hidden field\n                        modal.getRoot().find('#selectedActivityUrl').val(missionUrl);\n                    } else if (missionType == '3') { // Section\n                        modal.getRoot().find('#urlGroup').hide();\n                        modal.getRoot().find('#activityGroup').hide();\n                        modal.getRoot().find('#sectionGroup').show();\n                        loadCourseSections();\n                        // Set the section URL in the hidden field\n                        modal.getRoot().find('#selectedSectionUrl').val(missionUrl);\n                    } else { // Voting\n                        modal.getRoot().find('#urlGroup').hide();\n                        modal.getRoot().find('#activityGroup').hide();\n                        modal.getRoot().find('#sectionGroup').hide();\n                    }\n\n                    modal.show();\n                });\n\n                // Hide action buttons when clicking elsewhere\n                $(document).on('click', function(e) {\n                    if (!$(e.target).closest('.mission-container').length) {\n                        $('.mission-actions').hide();\n                    }\n                });\n\n            }).catch(function(error) {\n                notification.addNotification({\n                    message: 'Error creating mission modal: ' + error.message,\n                    type: 'error'\n                });\n            });\n        }\n    };\n});"],"names":["define","$","ajax","notification","ModalFactory","ModalEvents","Templates","init","blockid","courseid","create","type","types","SAVE_CANCEL","title","body","render","then","modal","loadCourseActivities","call","methodname","args","response","activities","dropdown","success","getRoot","find","empty","append","forEach","section","length","section_name","activity","option","attr","id","data","url","text","name","catch","error","addNotification","message","loadCourseSections","sections","filterActivities","searchTerm","each","this","toLowerCase","val","includes","show","hide","optgroup","not","on","selectedOption","cmid","sectionId","save","e","preventDefault","missionName","trim","missionType","missionUrl","selectedActivityId","selectedSectionId","missionColor","missionDescription","editingChapterId","editingMissionId","chapterid","description","parseInt","color","sectionid","levelid","prop","setTimeout","window","location","reload","errorMsg","always","hidden","form","reset","document","chapterId","chapterName","siblings","open","missionId","target","closest"],"mappings":"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"}