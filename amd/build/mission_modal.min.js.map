{"version":3,"file":"mission_modal.min.js","sources":["../src/mission_modal.js"],"sourcesContent":["define(['jquery', 'core/ajax', 'core/notification', 'core/modal_factory', 'core/modal_events', 'core/templates', 'core/str'],\n    function($, ajax, notification, ModalFactory, ModalEvents, Templates, str) {\n\n    return {\n        init: function(blockid, courseid) {\n\n            // Create modal using Moodle's ModalFactory with template\n            ModalFactory.create({\n                type: ModalFactory.types.SAVE_CANCEL,\n                title: 'Add Mission',\n                body: Templates.render('block_mission_map/add_mission_modal', {\n                    blockid: blockid,\n                    courseid: courseid\n                })\n            }).then(function(modal) {\n\n                // Show/hide URL/Activity/Section fields based on mission type\n                modal.getRoot().on('change', '#missionType', function() {\n                    var type = $(this).val();\n                    if (type == '1') { // URL\n                        $('#urlGroup').show();\n                        $('#activityGroup').hide();\n                        $('#sectionGroup').hide();\n                    } else if (type == '2') { // Activity\n                        $('#urlGroup').hide();\n                        $('#activityGroup').show();\n                        $('#sectionGroup').hide();\n                        loadCourseActivities();\n                    } else if (type == '3') { // Section\n                        $('#urlGroup').hide();\n                        $('#activityGroup').hide();\n                        $('#sectionGroup').show();\n                        loadCourseSections();\n                    } else { // Voting\n                        $('#urlGroup').hide();\n                        $('#activityGroup').hide();\n                        $('#sectionGroup').hide();\n                    }\n                });\n\n                // Handle activity search and filtering\n                modal.getRoot().on('input', '#missionActivitySearch', function() {\n                    var searchTerm = $(this).val().toLowerCase();\n                    filterActivities(searchTerm);\n                });\n\n                // Handle clear search button\n                modal.getRoot().on('click', '#clearSearchBtn', function() {\n                    $('#missionActivitySearch').val('');\n                    filterActivities('');\n                });\n\n                // Handle activity selection\n                modal.getRoot().on('change', '#missionActivitySelect', function() {\n                    var selectedOption = $(this).find('option:selected');\n                    var cmid = selectedOption.val();\n                    var url = selectedOption.data('url');\n\n                    if (cmid) {\n                        $('#selectedActivityUrl').val(url);\n                    } else {\n                        $('#selectedActivityUrl').val('');\n                    }\n                });\n\n                /**\n                 * Load course activities into dropdown\n                 * @param {Number} selectedCmid Optional: CMID to select after loading\n                 */\n                function loadCourseActivities(selectedCmid) {\n                    ajax.call([{\n                        methodname: 'block_mission_map_get_course_activities',\n                        args: { courseid: courseid }\n                    }])[0].then(function(response) {\n                        if (response.success && response.activities) {\n                            populateActivityDropdown(response.activities, selectedCmid);\n                        }\n                    }).catch(function(error) {\n                        notification.addNotification({\n                            message: 'Error loading activities: ' + error.message,\n                            type: 'error'\n                        });\n                    });\n                }\n\n                // Load course sections into dropdown\n                /**\n                 * Load course sections into dropdown\n                 * @param {String} selectedSectionid Optional: Section ID to select after loading\n                 */\n                function loadCourseSections(selectedSectionid) {\n                    ajax.call([{\n                        methodname: 'block_mission_map_get_course_sections',\n                        args: { courseid: courseid }\n                    }])[0].then(function(response) {\n                        if (response.success && response.sections) {\n                            populateSectionDropdown(response.sections, selectedSectionid);\n                        } else {\n                            notification.addNotification({\n                                message: 'Invalid response from server',\n                                type: 'error'\n                            });\n                        }\n                    }).catch(function(error) {\n                        notification.addNotification({\n                            message: 'Error loading sections: ' + (error.message || 'Unknown error'),\n                            type: 'error'\n                        });\n                    });\n                }\n\n                /**\n                 * Populate the activity dropdown with grouped sections\n                 * @param {Array} activities\n                 * @param {Number} selectedCmid Optional: CMID to select\n                 */\n                function populateActivityDropdown(activities, selectedCmid) {\n                    var dropdown = modal.getRoot().find('#missionActivitySelect');\n                    dropdown.empty();\n\n                    // Get translated string for \"Select an activity...\"\n                    str.get_string('select_activity', 'block_mission_map').then(function(selectActivityText) {\n                        dropdown.append('<option value=\"\">' + selectActivityText + '</option>');\n\n                        activities.forEach(function(section) {\n                            if (section.activities.length > 0) {\n                                // Add section header (disabled option)\n                                dropdown.append('<optgroup label=\"' + section.section_name + '\">');\n\n                                section.activities.forEach(function(activity) {\n                                    var option = $('<option></option>')\n                                        .attr('value', activity.id)\n                                        .data('url', activity.url)\n                                        .text(activity.name + ' (' + activity.type + ')');\n                                    // Select if this is the selected activity\n                                    if (selectedCmid && String(selectedCmid) == String(activity.id)) {\n                                        option.attr('selected', 'selected');\n                                        // Also update the hidden URL field\n                                        modal.getRoot().find('#selectedActivityUrl').val(activity.url);\n                                    }\n                                    dropdown.append(option);\n                                });\n\n                                dropdown.append('</optgroup>');\n                            }\n                        });\n                    });\n                }\n\n                /**\n                 * Populate the section dropdown\n                 * @param {Array} sections\n                 * @param {String} selectedSectionid Optional: Section ID to select\n                 */\n                function populateSectionDropdown(sections, selectedSectionid) {\n                    var dropdown = modal.getRoot().find('#missionSectionSelect');\n                    dropdown.empty();\n\n                    // Get translated string for \"Select a section...\"\n                    str.get_string('select_section', 'block_mission_map').then(function(selectSectionText) {\n                        dropdown.append('<option value=\"\">' + selectSectionText + '</option>');\n\n                        sections.forEach(function(section) {\n                            var option = $('<option></option>')\n                                .attr('value', section.id)\n                                .data('url', section.url)\n                                .text(section.name);\n                            // Select if this is the selected section\n                            if (selectedSectionid && String(selectedSectionid) == String(section.id)) {\n                                option.attr('selected', 'selected');\n                                // Also update the hidden URL field\n                                modal.getRoot().find('#selectedSectionUrl').val(section.url);\n                            }\n                            dropdown.append(option);\n                        });\n                    });\n                }\n\n                /**\n                 * Filter activities based on search term\n                 * @param {string} searchTerm\n                 */\n                function filterActivities(searchTerm) {\n                    var dropdown = modal.getRoot().find('#missionActivitySelect');\n                    var options = dropdown.find('option');\n\n                    options.each(function() {\n                        var option = $(this);\n                        var text = option.text().toLowerCase();\n\n                        if (option.val() === '') {\n                            // Always show the placeholder option\n                            option.show();\n                        } else if (searchTerm === '' || text.includes(searchTerm)) {\n                            option.show();\n                        } else {\n                            option.hide();\n                        }\n                    });\n\n                    // Hide/show optgroups based on visible children\n                    dropdown.find('optgroup').each(function() {\n                        var optgroup = $(this);\n                        var visibleOptions = optgroup.find('option:visible').not('[value=\"\"]');\n\n                        if (visibleOptions.length === 0) {\n                            optgroup.hide();\n                        } else {\n                            optgroup.show();\n                        }\n                    });\n                }\n\n                // Handle section selection\n                modal.getRoot().on('change', '#missionSectionSelect', function() {\n                    var selectedOption = $(this).find('option:selected');\n                    var sectionId = selectedOption.val();\n                    var url = selectedOption.data('url');\n\n                    if (sectionId) {\n                        $('#selectedSectionUrl').val(url);\n                    } else {\n                        $('#selectedSectionUrl').val('');\n                    }\n                });\n\n                // Handle save event using Moodle's standard save event\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n\n                    var missionName = modal.getRoot().find('#missionName').val().trim();\n                    var missionType = modal.getRoot().find('#missionType').val();\n                    var missionUrl = modal.getRoot().find('#missionUrl').val();\n                    var selectedActivityId = modal.getRoot().find('#missionActivitySelect').val();\n                    var selectedSectionId = modal.getRoot().find('#missionSectionSelect').val();\n                    var missionColor = modal.getRoot().find('#missionColor').val();\n                    var missionDescription = modal.getRoot().find('#missionDescription').val();\n\n                    if (!missionName) {\n                        notification.addNotification({\n                            message: 'Mission name is required',\n                            type: 'error'\n                        });\n                        return;\n                    }\n\n                    // Validate based on type\n                    if (missionType == '1' && !missionUrl) {\n                        notification.addNotification({\n                            message: 'Mission URL is required for URL type missions',\n                            type: 'error'\n                        });\n                        return;\n                    }\n\n                    if (missionType == '2' && !selectedActivityId) {\n                        notification.addNotification({\n                            message: 'Please select a course activity',\n                            type: 'error'\n                        });\n                        return;\n                    }\n\n                    if (missionType == '3' && !selectedSectionId) {\n                        notification.addNotification({\n                            message: 'Please select a course section',\n                            type: 'error'\n                        });\n                        return;\n                    }\n\n                    var editingChapterId = modal.getRoot().data('editing-chapter-id');\n                    var editingMissionId = modal.getRoot().data('editing-mission-id');\n\n                    // Prepare data\n                    var data = {\n                        blockid: blockid,\n                        courseid: courseid,\n                        chapterid: editingChapterId,\n                        name: missionName,\n                        description: missionDescription,\n                        type: parseInt(missionType),\n                        color: missionColor,\n                        url: missionType == '1' ? missionUrl :\n                            (missionType == '2' ? modal.getRoot().find('#selectedActivityUrl').val() :\n                            (missionType == '3' ? modal.getRoot().find('#selectedSectionUrl').val() : null)),\n                        cmid: missionType == '2' ? selectedActivityId : null,\n                        sectionid: missionType == '3' ? selectedSectionId : null\n                    };\n\n                    // Add mission ID if editing\n                    if (editingMissionId) {\n                        data.levelid = editingMissionId;\n                    }\n\n                    // Show loading state\n                    modal.getRoot().find('[data-action=\"save\"]').prop('disabled', true).text('Saving...');\n\n                    // Make AJAX call to create or update mission\n                    ajax.call([{\n                        methodname: 'block_mission_map_create_level',\n                        args: data\n                    }])[0].then(function(response) {\n                        if (response.success) {\n                            notification.addNotification({\n                                message: editingMissionId ? 'Mission updated successfully!' : 'Mission created successfully!',\n                                type: 'success'\n                            });\n\n                            // Close modal and reload page\n                            modal.hide();\n                            setTimeout(function() {\n                                window.location.reload();\n                            }, 1000);\n                        } else {\n                            var errorMsg = editingMissionId ? 'Error updating mission' : 'Error creating mission';\n                            notification.addNotification({\n                                message: response.message || errorMsg,\n                                type: 'error'\n                            });\n                        }\n                    }).catch(function(error) {\n                        notification.addNotification({\n                            message: 'Error saving mission: ' + error.message,\n                            type: 'error'\n                        });\n                    }).always(function() {\n                        // Reset button state\n                        modal.getRoot().find('[data-action=\"save\"]').prop('disabled', false).text('Save');\n                    });\n                });\n\n                // Reset form when modal is closed\n                modal.getRoot().on(ModalEvents.hidden, function() {\n                    var form = modal.getRoot().find('#addMissionForm')[0];\n                    if (form) {\n                        form.reset();\n                    }\n                    modal.getRoot().find('#urlGroup').show();\n                    modal.getRoot().find('#activityGroup').hide();\n                    modal.getRoot().find('#sectionGroup').hide();\n                    modal.getRoot().find('#missionActivitySearch').val('');\n                    modal.getRoot().find('#missionActivitySelect').val('');\n                    modal.getRoot().find('#missionSectionSelect').val('');\n                });\n\n                // Show modal when \"Add Mission\" button is clicked\n                $(document).on('click', '.add-mission-btn', function(e) {\n                    e.preventDefault();\n                    var chapterId = $(this).data('chapter-id');\n                    var chapterName = $(this).data('chapter-name');\n\n                    // Store chapter ID for mission creation\n                    modal.getRoot().data('editing-chapter-id', chapterId);\n                    modal.getRoot().data('editing-mission-id', null); // Clear any existing mission ID\n\n                    // Update modal title with chapter name\n                    modal.getRoot().find('.modal-title').text('Add Mission to: ' + chapterName);\n\n                    // Reset form\n                    var form = modal.getRoot().find('#addMissionForm')[0];\n                    if (form) {\n                        form.reset();\n                    }\n                    modal.getRoot().find('#urlGroup').show();\n                    modal.getRoot().find('#activityGroup').hide();\n                    modal.getRoot().find('#sectionGroup').hide();\n\n                    modal.show();\n                });\n\n                // Handle mission clicks to show/hide action buttons\n                $(document).on('click', '.mission', function(e) {\n                    e.preventDefault();\n\n                    // Hide all other action buttons\n                    $('.mission-actions').hide();\n\n                    // Show action buttons for this mission\n                    $(this).siblings('.mission-actions').show();\n                });\n\n                // Handle view button clicks\n                $(document).on('click', '.mission-view-btn', function(e) {\n                    e.preventDefault();\n                    var url = $(this).data('url');\n                    window.location.href = url;\n                });\n\n                // Handle delete mission buttons\n                $(document).on('click', '.mission-delete-btn', function(e) {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    var missionId = $(this).data('mission-id');\n                    var missionName = $(this).data('mission-name');\n                    var courseId = $(this).data('course-id');\n\n                    // Show confirmation dialog\n                    var confirmMsg = 'Are you sure you want to delete the mission \"' + missionName +\n                        '\"? This action cannot be undone.';\n                    if (!confirm(confirmMsg)) {\n                        return;\n                    }\n\n                    // Call delete API\n                    var request = {\n                        methodname: 'block_mission_map_delete_level',\n                        args: {\n                            levelid: missionId,\n                            courseid: courseId\n                        }\n                    };\n\n                    ajax.call([request])[0].then(function(response) {\n                        if (response.success) {\n                            notification.addNotification({\n                                message: response.message || 'Mission deleted successfully',\n                                type: 'success'\n                            });\n                            // Reload page to reflect changes\n                            window.location.reload();\n                        } else {\n                            notification.addNotification({\n                                message: response.message || 'Failed to delete mission',\n                                type: 'error'\n                            });\n                        }\n                    }).catch(function() {\n                        notification.addNotification({\n                            message: 'An error occurred while deleting the mission',\n                            type: 'error'\n                        });\n                    });\n                });\n\n                // Handle edit mission buttons\n                $(document).on('click', '.mission-edit-btn', function(e) {\n                    e.preventDefault();\n                    var missionId = $(this).data('mission-id');\n                    var missionName = $(this).data('mission-name');\n                    var missionDescription = $(this).data('mission-description');\n                    var missionType = $(this).data('mission-type');\n                    var missionUrl = $(this).data('mission-url');\n                    var missionColor = $(this).data('mission-color');\n                    var chapterId = $(this).data('chapter-id');\n                    var missionCmid = $(this).data('mission-cmid');\n                    var missionSectionid = $(this).data('mission-sectionid');\n\n                    // Store mission ID for update\n                    modal.getRoot().data('editing-mission-id', missionId);\n                    modal.getRoot().data('editing-chapter-id', chapterId);\n\n                    // Update modal title\n                    modal.getRoot().find('.modal-title').text('Edit Mission: ' + missionName);\n\n                    // Populate form with existing data\n                    modal.getRoot().find('#missionName').val(missionName);\n                    modal.getRoot().find('#missionDescription').val(missionDescription);\n                    modal.getRoot().find('#missionColor').val(missionColor);\n                    modal.getRoot().find('#missionType').val(missionType);\n\n                    // Show/hide appropriate fields based on type\n                    if (missionType == '1') { // URL\n                        modal.getRoot().find('#urlGroup').show();\n                        modal.getRoot().find('#activityGroup').hide();\n                        modal.getRoot().find('#sectionGroup').hide();\n                        modal.getRoot().find('#missionUrl').val(missionUrl);\n                    } else if (missionType == '2') { // Activity\n                        modal.getRoot().find('#urlGroup').hide();\n                        modal.getRoot().find('#activityGroup').show();\n                        modal.getRoot().find('#sectionGroup').hide();\n                        loadCourseActivities(missionCmid);\n                        // Set the activity URL in the hidden field\n                        modal.getRoot().find('#selectedActivityUrl').val(missionUrl);\n                    } else if (missionType == '3') { // Section\n                        modal.getRoot().find('#urlGroup').hide();\n                        modal.getRoot().find('#activityGroup').hide();\n                        modal.getRoot().find('#sectionGroup').show();\n                        loadCourseSections(missionSectionid);\n                        // Set the section URL in the hidden field\n                        modal.getRoot().find('#selectedSectionUrl').val(missionUrl);\n                    } else { // Voting\n                        modal.getRoot().find('#urlGroup').hide();\n                        modal.getRoot().find('#activityGroup').hide();\n                        modal.getRoot().find('#sectionGroup').hide();\n                    }\n\n                    modal.show();\n                });\n\n                // Hide action buttons when clicking elsewhere\n                $(document).on('click', function(e) {\n                    if (!$(e.target).closest('.mission-container').length) {\n                        $('.mission-actions').hide();\n                    }\n                });\n\n            }).catch(function(error) {\n                notification.addNotification({\n                    message: 'Error creating mission modal: ' + error.message,\n                    type: 'error'\n                });\n            });\n        }\n    };\n});"],"names":["define","$","ajax","notification","ModalFactory","ModalEvents","Templates","str","init","blockid","courseid","create","type","types","SAVE_CANCEL","title","body","render","then","modal","loadCourseActivities","selectedCmid","call","methodname","args","response","success","activities","dropdown","getRoot","find","empty","get_string","selectActivityText","append","forEach","section","length","section_name","activity","option","attr","id","data","url","text","name","String","val","populateActivityDropdown","catch","error","addNotification","message","loadCourseSections","selectedSectionid","sections","selectSectionText","populateSectionDropdown","filterActivities","searchTerm","each","this","toLowerCase","includes","show","hide","optgroup","not","on","selectedOption","cmid","sectionId","save","e","preventDefault","missionName","trim","missionType","missionUrl","selectedActivityId","selectedSectionId","missionColor","missionDescription","editingChapterId","editingMissionId","chapterid","description","parseInt","color","sectionid","levelid","prop","setTimeout","window","location","reload","errorMsg","always","hidden","form","reset","document","chapterId","chapterName","siblings","href","stopPropagation","missionId","courseId","confirm","request","missionCmid","missionSectionid","target","closest"],"mappings":"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"}