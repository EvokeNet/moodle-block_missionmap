{"version":3,"file":"mission_modal.min.js","sources":["../src/mission_modal.js"],"sourcesContent":["define(['jquery', 'core/ajax', 'core/notification', 'core/modal_factory', 'core/modal_events', 'core/templates'], function($, ajax, notification, ModalFactory, ModalEvents, Templates) {\n\n    return {\n        init: function(blockid, courseid) {\n            console.log('Mission modal init called with blockid:', blockid, 'courseid:', courseid);\n\n            // Create modal using Moodle's ModalFactory with template\n            ModalFactory.create({\n                type: ModalFactory.types.SAVE_CANCEL,\n                title: 'Add Mission',\n                body: Templates.render('block_mission_map/add_mission_modal', {\n                    blockid: blockid,\n                    courseid: courseid\n                })\n            }).then(function(modal) {\n                console.log('Mission modal created successfully');\n\n                // Show/hide URL/Activity fields based on mission type\n                modal.getRoot().on('change', '#missionType', function() {\n                    console.log('Mission type changed');\n                    var type = $(this).val();\n                    if (type == '1') { // URL\n                        $('#urlGroup').show();\n                        $('#activityGroup').hide();\n                    } else if (type == '2') { // Activity\n                        $('#urlGroup').hide();\n                        $('#activityGroup').show();\n                        loadCourseActivities();\n                    } else { // Voting\n                        $('#urlGroup').hide();\n                        $('#activityGroup').hide();\n                    }\n                });\n\n                // Handle activity search and filtering\n                var allActivities = [];\n                \n                modal.getRoot().on('input', '#missionActivitySearch', function() {\n                    var searchTerm = $(this).val().toLowerCase();\n                    filterActivities(searchTerm);\n                });\n\n                // Handle clear search button\n                modal.getRoot().on('click', '#clearSearchBtn', function() {\n                    $('#missionActivitySearch').val('');\n                    filterActivities('');\n                });\n\n                // Handle activity selection\n                modal.getRoot().on('change', '#missionActivitySelect', function() {\n                    var selectedOption = $(this).find('option:selected');\n                    var cmid = selectedOption.val();\n                    var url = selectedOption.data('url');\n                    \n                    if (cmid) {\n                        $('#selectedActivityUrl').val(url);\n                        console.log('Activity selected:', selectedOption.text(), 'CMID:', cmid, 'URL:', url);\n                    } else {\n                        $('#selectedActivityUrl').val('');\n                    }\n                });\n\n                // Load course activities into dropdown\n                function loadCourseActivities() {\n                    ajax.call([{\n                        methodname: 'block_mission_map_get_course_activities',\n                        args: { courseid: courseid }\n                    }])[0].then(function(response) {\n                        console.log('Activities loaded:', response);\n                        if (response.success && response.activities) {\n                            populateActivityDropdown(response.activities);\n                        }\n                    }).catch(function(error) {\n                        console.log('Error loading activities:', error);\n                        notification.addNotification({\n                            message: 'Error loading activities: ' + error.message,\n                            type: 'error'\n                        });\n                    });\n                }\n\n                // Populate the activity dropdown with grouped sections\n                function populateActivityDropdown(activities) {\n                    allActivities = activities;\n                    var dropdown = $('#missionActivitySelect');\n                    dropdown.empty();\n                    dropdown.append('<option value=\"\">{{#str}}select_activity, block_mission_map{{/str}}</option>');\n                    \n                    activities.forEach(function(section) {\n                        if (section.activities.length > 0) {\n                            // Add section header (disabled option)\n                            dropdown.append('<optgroup label=\"' + section.section_name + '\">');\n                            \n                            section.activities.forEach(function(activity) {\n                                var option = $('<option></option>')\n                                    .attr('value', activity.id)\n                                    .data('url', activity.url)\n                                    .text(activity.name + ' (' + activity.type + ')');\n                                dropdown.append(option);\n                            });\n                            \n                            dropdown.append('</optgroup>');\n                        }\n                    });\n                }\n\n                // Filter activities based on search term\n                function filterActivities(searchTerm) {\n                    var dropdown = $('#missionActivitySelect');\n                    var options = dropdown.find('option');\n                    \n                    options.each(function() {\n                        var option = $(this);\n                        var text = option.text().toLowerCase();\n                        \n                        if (option.val() === '') {\n                            // Always show the placeholder option\n                            option.show();\n                        } else if (searchTerm === '' || text.includes(searchTerm)) {\n                            option.show();\n                        } else {\n                            option.hide();\n                        }\n                    });\n                    \n                    // Hide/show optgroups based on visible children\n                    dropdown.find('optgroup').each(function() {\n                        var optgroup = $(this);\n                        var visibleOptions = optgroup.find('option:visible').not('[value=\"\"]');\n                        \n                        if (visibleOptions.length === 0) {\n                            optgroup.hide();\n                        } else {\n                            optgroup.show();\n                        }\n                    });\n                }\n\n                // Handle save event using Moodle's standard save event\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    console.log('Save mission event triggered');\n                    e.preventDefault();\n                    \n                    var missionName = $('#missionName').val().trim();\n                    var missionType = $('#missionType').val();\n                    var missionUrl = $('#missionUrl').val();\n                    var selectedActivityId = $('#missionActivitySelect').val();\n                    var missionColor = $('#missionColor').val();\n                    var missionDescription = $('#missionDescription').val();\n\n                    if (!missionName) {\n                        notification.addNotification({\n                            message: 'Mission name is required',\n                            type: 'error'\n                        });\n                        return;\n                    }\n\n                    // Validate based on type\n                    if (missionType == '1' && !missionUrl) {\n                        notification.addNotification({\n                            message: 'Mission URL is required for URL type missions',\n                            type: 'error'\n                        });\n                        return;\n                    }\n\n                    if (missionType == '2' && !selectedActivityId) {\n                        notification.addNotification({\n                            message: 'Please select a course activity',\n                            type: 'error'\n                        });\n                        return;\n                    }\n\n                    var editingChapterId = modal.getRoot().data('editing-chapter-id');\n\n                    // Prepare data\n                    var data = {\n                        blockid: blockid,\n                        courseid: courseid,\n                        chapterid: editingChapterId,\n                        name: missionName,\n                        description: missionDescription,\n                        type: parseInt(missionType),\n                        color: missionColor,\n                        url: missionType == '1' ? missionUrl : (missionType == '2' ? $('#selectedActivityUrl').val() : null),\n                        cmid: missionType == '2' ? selectedActivityId : null\n                    };\n\n                    console.log('Sending mission data:', data);\n\n                    // Show loading state\n                    modal.getRoot().find('[data-action=\"save\"]').prop('disabled', true).text('Saving...');\n\n                    // Make AJAX call to create mission\n                    ajax.call([{\n                        methodname: 'block_mission_map_create_level',\n                        args: data\n                    }])[0].then(function(response) {\n                        console.log('AJAX response:', response);\n                        if (response.success) {\n                            notification.addNotification({\n                                message: 'Mission created successfully!',\n                                type: 'success'\n                            });\n\n                            // Close modal and reload page\n                            modal.hide();\n                            setTimeout(function() {\n                                window.location.reload();\n                            }, 1000);\n                        } else {\n                            notification.addNotification({\n                                message: response.message || 'Error creating mission',\n                                type: 'error'\n                            });\n                        }\n                    }).catch(function(error) {\n                        console.log('AJAX error:', error);\n                        notification.addNotification({\n                            message: 'Error creating mission: ' + error.message,\n                            type: 'error'\n                        });\n                    }).always(function() {\n                        // Reset button state\n                        modal.getRoot().find('[data-action=\"save\"]').prop('disabled', false).text('Save');\n                    });\n                });\n\n                // Reset form when modal is closed\n                modal.getRoot().on(ModalEvents.hidden, function() {\n                    console.log('Mission modal closed');\n                    $('#addMissionForm')[0].reset();\n                    $('#urlGroup').show();\n                    $('#activityGroup').hide();\n                    $('#missionActivitySearch').val('');\n                    $('#missionActivitySelect').val('');\n                });\n\n                // Show modal when \"Add Mission\" button is clicked\n                $(document).on('click', '.add-mission-btn', function(e) {\n                    e.preventDefault();\n                    var chapterId = $(this).data('chapter-id');\n                    var chapterName = $(this).data('chapter-name');\n                    \n                    console.log('Add mission clicked for chapter:', chapterId, chapterName);\n                    \n                    // Store chapter ID for mission creation\n                    modal.getRoot().data('editing-chapter-id', chapterId);\n                    \n                    // Update modal title with chapter name\n                    modal.getRoot().find('.modal-title').text('Add Mission to: ' + chapterName);\n                    \n                    modal.show();\n                });\n\n                console.log('Mission modal setup complete');\n            }).catch(function(error) {\n                console.error('Error creating mission modal:', error);\n                notification.addNotification({\n                    message: 'Error creating mission modal: ' + error.message,\n                    type: 'error'\n                });\n            });\n        }\n    };\n});\n"],"names":["define","$","ajax","notification","ModalFactory","ModalEvents","Templates","init","blockid","courseid","console","log","create","type","types","SAVE_CANCEL","title","body","render","then","modal","getRoot","on","this","val","show","hide","call","methodname","args","response","success","activities","dropdown","empty","append","forEach","section","length","section_name","activity","option","attr","id","data","url","text","name","populateActivityDropdown","catch","error","addNotification","message","filterActivities","searchTerm","find","each","toLowerCase","includes","optgroup","not","selectedOption","cmid","save","e","preventDefault","missionName","trim","missionType","missionUrl","selectedActivityId","missionColor","missionDescription","editingChapterId","chapterid","description","parseInt","color","prop","setTimeout","window","location","reload","always","hidden","reset","document","chapterId","chapterName"],"mappings":"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"}