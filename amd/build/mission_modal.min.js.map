{"version":3,"file":"mission_modal.min.js","sources":["../src/mission_modal.js"],"sourcesContent":["define(['jquery', 'core/ajax', 'core/notification', 'core/modal_factory', 'core/modal_events', 'core/templates'],\n    function($, ajax, notification, ModalFactory, ModalEvents, Templates) {\n\n    return {\n        init: function(blockid, courseid) {\n\n            // Create modal using Moodle's ModalFactory with template\n            ModalFactory.create({\n                type: ModalFactory.types.SAVE_CANCEL,\n                title: 'Add Mission',\n                body: Templates.render('block_mission_map/add_mission_modal', {\n                    blockid: blockid,\n                    courseid: courseid\n                })\n            }).then(function(modal) {\n\n                // Show/hide URL/Activity fields based on mission type\n                modal.getRoot().on('change', '#missionType', function() {\n                    var type = $(this).val();\n                    if (type == '1') { // URL\n                        $('#urlGroup').show();\n                        $('#activityGroup').hide();\n                    } else if (type == '2') { // Activity\n                        $('#urlGroup').hide();\n                        $('#activityGroup').show();\n                        loadCourseActivities();\n                    } else { // Voting\n                        $('#urlGroup').hide();\n                        $('#activityGroup').hide();\n                    }\n                });\n\n                // Handle activity search and filtering\n                modal.getRoot().on('input', '#missionActivitySearch', function() {\n                    var searchTerm = $(this).val().toLowerCase();\n                    filterActivities(searchTerm);\n                });\n\n                // Handle clear search button\n                modal.getRoot().on('click', '#clearSearchBtn', function() {\n                    $('#missionActivitySearch').val('');\n                    filterActivities('');\n                });\n\n                // Handle activity selection\n                modal.getRoot().on('change', '#missionActivitySelect', function() {\n                    var selectedOption = $(this).find('option:selected');\n                    var cmid = selectedOption.val();\n                    var url = selectedOption.data('url');\n\n                    if (cmid) {\n                        $('#selectedActivityUrl').val(url);\n                    } else {\n                        $('#selectedActivityUrl').val('');\n                    }\n                });\n\n                /**\n                 * Load course activities into dropdown\n                 */\n                function loadCourseActivities() {\n                    ajax.call([{\n                        methodname: 'block_mission_map_get_course_activities',\n                        args: { courseid: courseid }\n                    }])[0].then(function(response) {\n                        if (response.success && response.activities) {\n                            populateActivityDropdown(response.activities);\n                        }\n                    }).catch(function(error) {\n                        notification.addNotification({\n                            message: 'Error loading activities: ' + error.message,\n                            type: 'error'\n                        });\n                    });\n                }\n\n                /**\n                 * Populate the activity dropdown with grouped sections\n                 * @param {Array} activities\n                 */\n                function populateActivityDropdown(activities) {\n                    var dropdown = $('#missionActivitySelect');\n                    dropdown.empty();\n                    dropdown.append('<option value=\"\">{{#str}}select_activity, block_mission_map{{/str}}</option>');\n\n                    activities.forEach(function(section) {\n                        if (section.activities.length > 0) {\n                            // Add section header (disabled option)\n                            dropdown.append('<optgroup label=\"' + section.section_name + '\">');\n\n                            section.activities.forEach(function(activity) {\n                                var option = $('<option></option>')\n                                    .attr('value', activity.id)\n                                    .data('url', activity.url)\n                                    .text(activity.name + ' (' + activity.type + ')');\n                                dropdown.append(option);\n                            });\n\n                            dropdown.append('</optgroup>');\n                        }\n                    });\n                }\n\n                /**\n                 * Filter activities based on search term\n                 * @param {string} searchTerm\n                 */\n                function filterActivities(searchTerm) {\n                    var dropdown = $('#missionActivitySelect');\n                    var options = dropdown.find('option');\n\n                    options.each(function() {\n                        var option = $(this);\n                        var text = option.text().toLowerCase();\n\n                        if (option.val() === '') {\n                            // Always show the placeholder option\n                            option.show();\n                        } else if (searchTerm === '' || text.includes(searchTerm)) {\n                            option.show();\n                        } else {\n                            option.hide();\n                        }\n                    });\n\n                    // Hide/show optgroups based on visible children\n                    dropdown.find('optgroup').each(function() {\n                        var optgroup = $(this);\n                        var visibleOptions = optgroup.find('option:visible').not('[value=\"\"]');\n\n                        if (visibleOptions.length === 0) {\n                            optgroup.hide();\n                        } else {\n                            optgroup.show();\n                        }\n                    });\n                }\n\n                // Handle save event using Moodle's standard save event\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    e.preventDefault();\n\n                    var missionName = $('#missionName').val().trim();\n                    var missionType = $('#missionType').val();\n                    var missionUrl = $('#missionUrl').val();\n                    var selectedActivityId = $('#missionActivitySelect').val();\n                    var missionColor = $('#missionColor').val();\n                    var missionDescription = $('#missionDescription').val();\n\n                    if (!missionName) {\n                        notification.addNotification({\n                            message: 'Mission name is required',\n                            type: 'error'\n                        });\n                        return;\n                    }\n\n                    // Validate based on type\n                    if (missionType == '1' && !missionUrl) {\n                        notification.addNotification({\n                            message: 'Mission URL is required for URL type missions',\n                            type: 'error'\n                        });\n                        return;\n                    }\n\n                    if (missionType == '2' && !selectedActivityId) {\n                        notification.addNotification({\n                            message: 'Please select a course activity',\n                            type: 'error'\n                        });\n                        return;\n                    }\n\n                    var editingChapterId = modal.getRoot().data('editing-chapter-id');\n                    var editingMissionId = modal.getRoot().data('editing-mission-id');\n\n                    // Prepare data\n                    var data = {\n                        blockid: blockid,\n                        courseid: courseid,\n                        chapterid: editingChapterId,\n                        name: missionName,\n                        description: missionDescription,\n                        type: parseInt(missionType),\n                        color: missionColor,\n                        url: missionType == '1' ? missionUrl : (missionType == '2' ? $('#selectedActivityUrl').val() : null),\n                        cmid: missionType == '2' ? selectedActivityId : null\n                    };\n\n                    // Add mission ID if editing\n                    if (editingMissionId) {\n                        data.levelid = editingMissionId;\n                    }\n\n                    // Show loading state\n                    modal.getRoot().find('[data-action=\"save\"]').prop('disabled', true).text('Saving...');\n\n                    // Make AJAX call to create or update mission\n                    ajax.call([{\n                        methodname: 'block_mission_map_create_level',\n                        args: data\n                    }])[0].then(function(response) {\n                        if (response.success) {\n                            notification.addNotification({\n                                message: editingMissionId ? 'Mission updated successfully!' : 'Mission created successfully!',\n                                type: 'success'\n                            });\n\n                            // Close modal and reload page\n                            modal.hide();\n                            setTimeout(function() {\n                                window.location.reload();\n                            }, 1000);\n                        } else {\n                            var errorMsg = editingMissionId ? 'Error updating mission' : 'Error creating mission';\n                            notification.addNotification({\n                                message: response.message || errorMsg,\n                                type: 'error'\n                            });\n                        }\n                    }).catch(function(error) {\n                        notification.addNotification({\n                            message: 'Error saving mission: ' + error.message,\n                            type: 'error'\n                        });\n                    }).always(function() {\n                        // Reset button state\n                        modal.getRoot().find('[data-action=\"save\"]').prop('disabled', false).text('Save');\n                    });\n                });\n\n                // Reset form when modal is closed\n                modal.getRoot().on(ModalEvents.hidden, function() {\n                    $('#addMissionForm')[0].reset();\n                    $('#urlGroup').show();\n                    $('#activityGroup').hide();\n                    $('#missionActivitySearch').val('');\n                    $('#missionActivitySelect').val('');\n                });\n\n                // Show modal when \"Add Mission\" button is clicked\n                $(document).on('click', '.add-mission-btn', function(e) {\n                    e.preventDefault();\n                    var chapterId = $(this).data('chapter-id');\n                    var chapterName = $(this).data('chapter-name');\n\n                    // Store chapter ID for mission creation\n                    modal.getRoot().data('editing-chapter-id', chapterId);\n                    modal.getRoot().data('editing-mission-id', null); // Clear any existing mission ID\n\n                    // Update modal title with chapter name\n                    modal.getRoot().find('.modal-title').text('Add Mission to: ' + chapterName);\n\n                    // Reset form\n                    $('#addMissionForm')[0].reset();\n                    $('#urlGroup').show();\n                    $('#activityGroup').hide();\n\n                    modal.show();\n                });\n\n                // Handle mission clicks to show/hide action buttons\n                $(document).on('click', '.mission', function(e) {\n                    e.preventDefault();\n                    \n                    // Hide all other action buttons\n                    $('.mission-actions').hide();\n                    \n                    // Show action buttons for this mission\n                    $(this).siblings('.mission-actions').show();\n                });\n\n                // Handle view button clicks\n                $(document).on('click', '.mission-view-btn', function(e) {\n                    e.preventDefault();\n                    var url = $(this).data('url');\n                    window.open(url, '_blank');\n                });\n\n                // Handle edit mission buttons\n                $(document).on('click', '.mission-edit-btn', function(e) {\n                    e.preventDefault();\n                    var missionId = $(this).data('mission-id');\n                    var missionName = $(this).data('mission-name');\n                    var missionDescription = $(this).data('mission-description');\n                    var missionType = $(this).data('mission-type');\n                    var missionUrl = $(this).data('mission-url');\n                    var missionColor = $(this).data('mission-color');\n                    var chapterId = $(this).data('chapter-id');\n\n                    // Store mission ID for update\n                    modal.getRoot().data('editing-mission-id', missionId);\n                    modal.getRoot().data('editing-chapter-id', chapterId);\n\n                    // Update modal title\n                    modal.getRoot().find('.modal-title').text('Edit Mission: ' + missionName);\n\n                    // Populate form with existing data\n                    $('#missionName').val(missionName);\n                    $('#missionDescription').val(missionDescription);\n                    $('#missionColor').val(missionColor);\n                    $('#missionType').val(missionType);\n\n                    // Show/hide appropriate fields based on type\n                    if (missionType == '1') { // URL\n                        $('#urlGroup').show();\n                        $('#activityGroup').hide();\n                        $('#missionUrl').val(missionUrl);\n                    } else if (missionType == '2') { // Activity\n                        $('#urlGroup').hide();\n                        $('#activityGroup').show();\n                        loadCourseActivities();\n                        // Set the activity URL in the hidden field\n                        $('#selectedActivityUrl').val(missionUrl);\n                    } else { // Voting\n                        $('#urlGroup').hide();\n                        $('#activityGroup').hide();\n                    }\n\n                    modal.show();\n                });\n\n                // Hide action buttons when clicking elsewhere\n                $(document).on('click', function(e) {\n                    if (!$(e.target).closest('.mission-container').length) {\n                        $('.mission-actions').hide();\n                    }\n                });\n\n            }).catch(function(error) {\n                notification.addNotification({\n                    message: 'Error creating mission modal: ' + error.message,\n                    type: 'error'\n                });\n            });\n        }\n    };\n});"],"names":["define","$","ajax","notification","ModalFactory","ModalEvents","Templates","init","blockid","courseid","create","type","types","SAVE_CANCEL","title","body","render","then","modal","loadCourseActivities","call","methodname","args","response","activities","dropdown","success","empty","append","forEach","section","length","section_name","activity","option","attr","id","data","url","text","name","catch","error","addNotification","message","filterActivities","searchTerm","find","each","this","toLowerCase","val","includes","show","hide","optgroup","not","getRoot","on","selectedOption","cmid","save","e","preventDefault","missionName","trim","missionType","missionUrl","selectedActivityId","missionColor","missionDescription","editingChapterId","editingMissionId","chapterid","description","parseInt","color","levelid","prop","setTimeout","window","location","reload","errorMsg","always","hidden","reset","document","chapterId","chapterName","siblings","open","missionId","target","closest"],"mappings":"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"}