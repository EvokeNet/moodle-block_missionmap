define ("block_mission_map/connectors",["exports"],function(a){"use strict";Object.defineProperty(a,"__esModule",{value:!0});a.init=void 0;function b(a){if("undefined"==typeof Symbol||null==a[Symbol.iterator]){if(Array.isArray(a)||(a=c(a))){var b=0,d=function(){};return{s:d,n:function n(){if(b>=a.length)return{done:!0};return{done:!1,value:a[b++]}},e:function e(a){throw a},f:d}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var e,f=!0,g=!1,h;return{s:function s(){e=a[Symbol.iterator]()},n:function n(){var a=e.next();f=a.done;return a},e:function e(a){g=!0;h=a},f:function f(){try{if(!f&&null!=e.return)e.return()}finally{if(g)throw h}}}}function c(a,b){if(!a)return;if("string"==typeof a)return d(a,b);var c=Object.prototype.toString.call(a).slice(8,-1);if("Object"===c&&a.constructor)c=a.constructor.name;if("Map"===c||"Set"===c)return Array.from(c);if("Arguments"===c||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(c))return d(a,b)}function d(a,b){if(null==b||b>a.length)b=a.length;for(var c=0,d=Array(b);c<b;c++){d[c]=a[c]}return d}a.init=function init(){var a=document.querySelectorAll(".chapter"),c=b(a),d;try{for(c.s();!(d=c.n()).done;){for(var f=d.value,g=f.querySelectorAll(".mission"),h=f.querySelectorAll(".curve"),j=f.offsetWidth,k=f.offsetHeight,l=j/g.length,m=l/2,n=g.length,o=0,p=0;p<n;p++){var q=g[p].offsetWidth,r=g[p].offsetHeight;g[p].style.top=k/2+r+o+"px";g[p].style.left=m-q/2+"px";g[p].style.transform="rotate(-15deg)";m+=l;o-=k/(1.5*n)}for(var p=0,s;p<g.length;p++){s=h[p];if(p==g.length-1){break}e(g[p],g[p+1],s)}}}catch(a){c.e(a)}finally{c.f()}};var e=function(a,b,c){var d={x:a.offsetLeft+a.offsetWidth/2,y:a.offsetTop-a.offsetHeight/2},e={x:d.x,y:d.y-20},f={x:b.offsetLeft+b.offsetWidth/2,y:b.offsetTop-b.offsetHeight/2},g={x:f.x-60,y:e.y};c.setAttribute("d","M".concat(d.x,",").concat(d.y," C").concat(e.x,",").concat(e.y," ").concat(g.x,",").concat(g.y," ").concat(f.x,",").concat(f.y))}});
//# sourceMappingURL=connectors.min.js.map
