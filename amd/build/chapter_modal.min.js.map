{"version":3,"file":"chapter_modal.min.js","sources":["../src/chapter_modal.js"],"sourcesContent":["define(['jquery', 'core/ajax', 'core/notification', 'core/modal_factory', 'core/modal_events', 'core/templates'], function($, ajax, notification, ModalFactory, ModalEvents, Templates) {\n\n    return {\n        init: function(blockid, courseid) {\n            console.log('Chapter modal init called with blockid:', blockid, 'courseid:', courseid);\n\n            // Create modal using Moodle's ModalFactory with template\n            ModalFactory.create({\n                type: ModalFactory.types.SAVE_CANCEL,\n                title: 'Add Chapter',\n                body: Templates.render('block_mission_map/add_chapter_modal', {\n                    blockid: blockid,\n                    courseid: courseid\n                })\n            }).then(function(modal) {\n                console.log('Modal created successfully');\n\n                // Show/hide unlock date field based on checkbox\n                modal.getRoot().on('change', '#hasLock', function() {\n                    console.log('HasLock checkbox changed');\n                    if ($(this).is(':checked')) {\n                        $('#unlockDateGroup').show();\n                    } else {\n                        $('#unlockDateGroup').hide();\n                    }\n                });\n\n                // Handle save event using Moodle's standard save event\n                modal.getRoot().on(ModalEvents.save, function(e) {\n                    console.log('Save event triggered');\n                    e.preventDefault();\n                    \n                    var chapterName = $('#chapterName').val().trim();\n\n                    if (!chapterName) {\n                        notification.addNotification({\n                            message: 'Chapter name is required',\n                            type: 'error'\n                        });\n                        return;\n                    }\n\n                    var hasLock = $('#hasLock').is(':checked');\n                    var unlockingDate = hasLock ? $('#unlockDate').val() : null;\n                    var editingChapterId = modal.getRoot().data('editing-chapter-id');\n\n                    // Prepare data\n                    var data = {\n                        blockid: blockid,\n                        courseid: courseid,\n                        name: chapterName,\n                        has_lock: hasLock ? 1 : 0,\n                        unlocking_date: unlockingDate\n                    };\n\n                    // Add chapter ID if editing\n                    if (editingChapterId) {\n                        data.chapterid = editingChapterId;\n                    }\n\n                    console.log('Sending data:', data);\n\n                    // Show loading state\n                    modal.getRoot().find('[data-action=\"save\"]').prop('disabled', true).text('Saving...');\n\n                    // Make AJAX call to create or update chapter\n                    ajax.call([{\n                        methodname: 'block_mission_map_create_chapter',\n                        args: data\n                    }])[0].then(function(response) {\n                        console.log('AJAX response:', response);\n                        if (response.success) {\n                            notification.addNotification({\n                                message: editingChapterId ? 'Chapter updated successfully!' : 'Chapter created successfully!',\n                                type: 'success'\n                            });\n\n                            // Close modal and reload page\n                            modal.hide();\n                            setTimeout(function() {\n                                window.location.reload();\n                            }, 1000);\n                        } else {\n                            notification.addNotification({\n                                message: response.message || 'Error saving chapter',\n                                type: 'error'\n                            });\n                        }\n                    }).catch(function(error) {\n                        console.log('AJAX error:', error);\n                        notification.addNotification({\n                            message: 'Error saving chapter: ' + error.message,\n                            type: 'error'\n                        });\n                    }).always(function() {\n                        // Reset button state\n                        modal.getRoot().find('[data-action=\"save\"]').prop('disabled', false).text('Save');\n                    });\n                });\n\n                // Reset form when modal is closed\n                modal.getRoot().on(ModalEvents.hidden, function() {\n                    console.log('Modal closed');\n                    $('#addChapterForm')[0].reset();\n                    $('#unlockDateGroup').hide();\n                });\n\n                // Show modal when button is clicked (both main button and header button)\n                $('button[data-target=\"#addChapterModal\"], .editing_add_chapter').on('click', function(e) {\n                    e.preventDefault();\n                    console.log('Button clicked, showing modal');\n                    modal.show();\n                });\n\n                // Handle edit chapter buttons\n                $(document).on('click', '.edit-chapter-btn', function(e) {\n                    e.preventDefault();\n                    var chapterId = $(this).data('chapter-id');\n                    var chapterName = $(this).data('chapter-name');\n                    var hasLock = $(this).data('has-lock');\n                    var unlockDate = $(this).data('unlock-date');\n                    \n                    console.log('Edit chapter clicked:', chapterId);\n                    \n                    // Populate modal with existing data\n                    $('#chapterName').val(chapterName);\n                    $('#hasLock').prop('checked', hasLock == 1);\n                    if (hasLock == 1) {\n                        $('#unlockDateGroup').show();\n                        if (unlockDate) {\n                            $('#unlockDate').val(unlockDate);\n                        }\n                    } else {\n                        $('#unlockDateGroup').hide();\n                    }\n                    \n                    // Store chapter ID for update\n                    modal.getRoot().data('editing-chapter-id', chapterId);\n                    \n                    modal.show();\n                });\n\n                console.log('Modal setup complete');\n            }).catch(function(error) {\n                console.error('Error creating modal:', error);\n                notification.addNotification({\n                    message: 'Error creating modal: ' + error.message,\n                    type: 'error'\n                });\n            });\n        }\n    };\n});\n"],"names":["define","$","ajax","notification","ModalFactory","ModalEvents","Templates","init","blockid","courseid","console","log","create","type","types","SAVE_CANCEL","title","body","render","then","modal","getRoot","on","this","is","show","hide","save","e","preventDefault","chapterName","val","trim","hasLock","unlockingDate","editingChapterId","data","name","has_lock","unlocking_date","chapterid","find","prop","text","call","methodname","args","response","success","addNotification","message","setTimeout","window","location","reload","catch","error","always","hidden","reset","document","chapterId","unlockDate"],"mappings":"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"}