{"version":3,"sources":["../src/connectors.js"],"names":["init","chapters","document","querySelectorAll","invert_flow","counter","i","length","missions","mission_texts","place_missions","chapter","chapter_no","path","querySelector","pathLength","getTotalLength","increment","percentage","m","p","getPointAtLength","setAttribute","x","y"],"mappings":"kJAAoB,QAAPA,CAAAA,IAAO,EAAM,CAKtB,OAJMC,CAAAA,CAAQ,CAAGC,QAAQ,CAACC,gBAAT,CAA0B,UAA1B,CAIjB,CAHIC,CAAW,GAGf,CAFIC,CAAO,CAAG,CAEd,CAASC,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGL,CAAQ,CAACM,MAA7B,CAAqCD,CAAC,EAAtC,CAA0C,IAChCE,CAAAA,CAAQ,CAAGP,CAAQ,CAACK,CAAD,CAAR,CAAYH,gBAAZ,CAA6B,UAA7B,CADqB,CAEhCM,CAAa,CAAGR,CAAQ,CAACK,CAAD,CAAR,CAAYH,gBAAZ,CAA6B,eAA7B,CAFgB,CAGtCO,CAAc,CAACF,CAAD,CAAWC,CAAX,CAA0BR,CAAQ,CAACK,CAAD,CAAlC,CAAuCA,CAAvC,CAA0CF,CAA1C,CAAd,CACA,GAAe,CAAX,EAAAC,CAAJ,CAAkB,CACdD,CAAW,CAAG,CAACA,CAAf,CACAC,CAAO,CAAG,CACb,CACDA,CAAO,EACV,CACJ,C,CAgCD,GAAMK,CAAAA,CAAc,CAAG,SACnBF,CADmB,CAEnBC,CAFmB,CAGnBE,CAHmB,CAInBC,CAJmB,CAKnBR,CALmB,CAMlB,IACGS,CAAAA,CAAI,CAAGF,CAAO,CAACG,aAAR,gBAA8BF,CAAU,CAAG,CAA3C,EADV,CAEGG,CAAU,CAAGF,CAAI,CAACG,cAAL,EAFhB,CAGGC,CAAS,CAAG,EAAIT,CAAQ,CAACD,MAH5B,CAIGW,CAAU,CAAG,EAJhB,CAMD,GAAId,CAAJ,CAAiB,CACb,IAAK,GAAIe,CAAAA,CAAC,CAAGX,CAAQ,CAACD,MAAT,CAAkB,CAA1B,CACGa,CADR,CAAuC,CAAL,EAAAD,CAAlC,CAA0CA,CAAC,EAA3C,CAA+C,CACvCC,CADuC,CACnCP,CAAI,CAACQ,gBAAL,CAAsBH,CAAU,CAAGH,CAAnC,CADmC,CAE3CP,CAAQ,CAACW,CAAD,CAAR,CAAYG,YAAZ,CAAyB,WAAzB,qBAAmDF,CAAC,CAACG,CAArD,cAA2DH,CAAC,CAACI,CAA7D,OACAf,CAAa,CAACU,CAAD,CAAb,CAAiBG,YAAjB,CACI,WADJ,qBAEiBF,CAAC,CAACG,CAFnB,cAEyBH,CAAC,CAACI,CAAF,CAAM,EAF/B,OAIAN,CAAU,EAAID,CACjB,CACJ,CAVD,IAUO,CACH,IAAK,GAAIE,CAAAA,CAAC,CAAG,CAAR,CACGC,CADR,CAAgBD,CAAC,CAAGX,CAAQ,CAACD,MAA7B,CAAqCY,CAAC,EAAtC,CAA0C,CAClCC,CADkC,CAC9BP,CAAI,CAACQ,gBAAL,CAAsBH,CAAU,CAAGH,CAAnC,CAD8B,CAEtCP,CAAQ,CAACW,CAAD,CAAR,CAAYG,YAAZ,CAAyB,WAAzB,qBAAmDF,CAAC,CAACG,CAArD,cAA2DH,CAAC,CAACI,CAA7D,OACAf,CAAa,CAACU,CAAD,CAAb,CAAiBG,YAAjB,CACI,WADJ,qBAEiBF,CAAC,CAACG,CAFnB,cAEyBH,CAAC,CAACI,CAAF,CAAM,EAF/B,OAIAN,CAAU,EAAID,CACjB,CACJ,CACJ,C","sourcesContent":["export const init = () => {\n    const chapters = document.querySelectorAll('.chapter');\n    let invert_flow = false;\n    let counter = 0;\n\n    for (var i = 0; i < chapters.length; i++) {\n        const missions = chapters[i].querySelectorAll('.mission');\n        const mission_texts = chapters[i].querySelectorAll('.mission-text');\n        place_missions(missions, mission_texts, chapters[i], i, invert_flow);\n        if (counter == 2) {\n            invert_flow = !invert_flow;\n            counter = 0;\n        }\n        counter++;\n    }\n};\n\n// const connect = (from, to, curve) => {\n//     const start = {\n//         x: from.offsetLeft + from.offsetWidth / 2,\n//         y: from.offsetTop - from.offsetHeight / 2,\n//     };\n\n//     const middle_1 = {\n//         x: start.x,\n//         y: start.y - 20,\n//     };\n\n//     const end = {\n//         x: to.offsetLeft + to.offsetWidth / 2,\n//         y: to.offsetTop - to.offsetHeight / 2,\n//     };\n\n//     const middle_2 = {\n//         x: end.x - 60,\n//         y: middle_1.y,\n//     };\n\n//     curve.setAttribute(\n//         'd',\n//         `M${start.x},${start.y} C${middle_1.x},${middle_1.y} ${middle_2.x},${middle_2.y} ${end.x},${end.y}`\n//     );\n// };\n\n/**\n *  Path along div\n **/\nconst place_missions = (\n    missions,\n    mission_texts,\n    chapter,\n    chapter_no,\n    invert_flow\n) => {\n    let path = chapter.querySelector(`.path${chapter_no + 1}`);\n    let pathLength = path.getTotalLength();\n    let increment = 1 / missions.length;\n    let percentage = 0.1;\n\n    if (invert_flow) {\n        for (let m = missions.length - 1; m >= 0; m--) {\n            let p = path.getPointAtLength(percentage * pathLength);\n            missions[m].setAttribute('transform', `translate(${p.x}, ${p.y})`);\n            mission_texts[m].setAttribute(\n                'transform',\n                `translate(${p.x}, ${p.y + 12})`\n            );\n            percentage += increment;\n        }\n    } else {\n        for (let m = 0; m < missions.length; m++) {\n            let p = path.getPointAtLength(percentage * pathLength);\n            missions[m].setAttribute('transform', `translate(${p.x}, ${p.y})`);\n            mission_texts[m].setAttribute(\n                'transform',\n                `translate(${p.x}, ${p.y + 12})`\n            );\n            percentage += increment;\n        }\n    }\n};\n"],"file":"connectors.min.js"}