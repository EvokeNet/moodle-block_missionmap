{"version":3,"sources":["../src/connectors.js"],"names":["init","chapters","document","querySelectorAll","chapter","missions","curves","width","offsetWidth","height","offsetHeight","division","length","offsetLeft","mission","style","top","left","i","curve","connectCurve","from","to","start","x","y","offsetTop","middle_1","end","middle_2","setAttribute"],"mappings":"woCAAoB,QAAPA,CAAAA,IAAO,EAAM,IAChBC,CAAAA,CAAQ,CAAGC,QAAQ,CAACC,gBAAT,CAA0B,UAA1B,CADK,KAGFF,CAHE,QAGtB,2BAA8B,IAArBG,CAAAA,CAAqB,SACpBC,CAAQ,CAAGD,CAAO,CAACD,gBAAR,CAAyB,UAAzB,CADS,CAEpBG,CAAM,CAAGF,CAAO,CAACD,gBAAR,CAAyB,QAAzB,CAFW,CAIpBI,CAAK,CAAGH,CAAO,CAACI,WAJI,CAKpBC,CAAM,CAAGL,CAAO,CAACM,YALG,CAMpBC,CAAQ,CAAGJ,CAAK,CAAGF,CAAQ,CAACO,MANR,CAOpBC,CAAU,CAAGF,CAAQ,CAAG,CAPJ,KAUNN,CAVM,QAU1B,2BAA8B,IAArBS,CAAAA,CAAqB,SAC1BA,CAAO,CAACC,KAAR,CAAcC,GAAd,CAHiBP,CAAM,CAAG,CAGN,CAAe,EAAf,CAAoB,IAAxC,CACAK,CAAO,CAACC,KAAR,CAAcE,IAAd,CAAqBJ,CAAU,CAAG,EAAb,CAAkB,IAAvC,CACAA,CAAU,EAAIF,CACjB,CAdyB,+BAgB1B,IAAK,GAAIO,CAAAA,CAAC,CAAG,CAAR,CACGC,CADR,CAAgBD,CAAC,CAAGb,CAAQ,CAACO,MAA7B,CAAqCM,CAAC,EAAtC,CAA0C,CAClCC,CADkC,CAC1Bb,CAAM,CAACY,CAAD,CADoB,CAEtC,GAAIA,CAAC,EAAIb,CAAQ,CAACO,MAAT,CAAkB,CAA3B,CAA8B,CAC1B,KACH,CACDQ,CAAY,CAACf,CAAQ,CAACa,CAAD,CAAT,CAAcb,CAAQ,CAACa,CAAC,CAAG,CAAL,CAAtB,CAA+BC,CAA/B,CACf,CACJ,CA1BqB,+BA2BzB,C,CAeD,GAAMC,CAAAA,CAAY,CAAG,SAACC,CAAD,CAAOC,CAAP,CAAWH,CAAX,CAAqB,IAChCI,CAAAA,CAAK,CAAG,CACVC,CAAC,CAAEH,CAAI,CAACR,UAAL,CAAkBQ,CAAI,CAACb,WAAL,CAAmB,CAD9B,CAEViB,CAAC,CAAEJ,CAAI,CAACK,SAAL,CAAiBL,CAAI,CAACX,YAAL,CAAoB,CAF9B,CADwB,CAMhCiB,CAAQ,CAAG,CACbH,CAAC,CAAED,CAAK,CAACC,CADI,CAEbC,CAAC,CAAEF,CAAK,CAACE,CAAN,CAAU,EAFA,CANqB,CAWhCG,CAAG,CAAG,CACRJ,CAAC,CAAEF,CAAE,CAACT,UAAH,CAAgBS,CAAE,CAACd,WAAH,CAAiB,CAD5B,CAERiB,CAAC,CAAEH,CAAE,CAACI,SAAH,CAAeJ,CAAE,CAACZ,YAAH,CAAkB,CAF5B,CAX0B,CAgBhCmB,CAAQ,CAAG,CACbL,CAAC,CAAEI,CAAG,CAACJ,CADM,CAEbC,CAAC,CAAEE,CAAQ,CAACF,CAFC,CAhBqB,CAqBtCN,CAAK,CAACW,YAAN,CACI,GADJ,YAEQP,CAAK,CAACC,CAFd,aAEmBD,CAAK,CAACE,CAFzB,cAE+BE,CAAQ,CAACH,CAFxC,aAE6CG,CAAQ,CAACF,CAFtD,aAE2DI,CAAQ,CAACL,CAFpE,aAEyEK,CAAQ,CAACJ,CAFlF,aAEuFG,CAAG,CAACJ,CAF3F,aAEgGI,CAAG,CAACH,CAFpG,EAIH,C","sourcesContent":["export const init = () => {\n    const chapters = document.querySelectorAll('.chapter');\n\n    for (var chapter of chapters) {\n        const missions = chapter.querySelectorAll('.mission');\n        const curves = chapter.querySelectorAll('.curve');\n\n        const width = chapter.offsetWidth;\n        const height = chapter.offsetHeight;\n        const division = width / missions.length;\n        const offsetLeft = division / 2;\n        const offsetHeight = height / 2;\n\n        for (var mission of missions) {\n            mission.style.top = offsetHeight - 25 + 'px';\n            mission.style.left = offsetLeft - 25 + 'px';\n            offsetLeft += division;\n        }\n\n        for (var i = 0; i < missions.length; i++) {\n            var curve = curves[i];\n            if (i == missions.length - 1) {\n                break;\n            }\n            connectCurve(missions[i], missions[i + 1], curve);\n        }\n    }\n};\n\n// const connectLine = (from, to, line) => {\n//     const x1 = from.offsetLeft + from.offsetWidth / 2;\n//     const y1 = from.offsetTop - from.offsetHeight / 2;\n\n//     const x2 = to.offsetLeft + to.offsetWidth / 2;\n//     const y2 = to.offsetTop - to.offsetHeight / 2;\n\n//     line.setAttribute('x1', x1);\n//     line.setAttribute('y1', y1);\n//     line.setAttribute('x2', x2);\n//     line.setAttribute('y2', y2);\n// };\n\nconst connectCurve = (from, to, curve) => {\n    const start = {\n        x: from.offsetLeft + from.offsetWidth / 2,\n        y: from.offsetTop - from.offsetHeight / 2,\n    };\n\n    const middle_1 = {\n        x: start.x,\n        y: start.y - 20,\n    };\n\n    const end = {\n        x: to.offsetLeft + to.offsetWidth / 2,\n        y: to.offsetTop - to.offsetHeight / 2,\n    };\n\n    const middle_2 = {\n        x: end.x,\n        y: middle_1.y,\n    };\n\n    curve.setAttribute(\n        'd',\n        `M${start.x},${start.y} C${middle_1.x},${middle_1.y} ${middle_2.x},${middle_2.y} ${end.x},${end.y}`\n    );\n};\n\n// const connect = (from, to, line) => {\n//     var fT = from.offsetTop + from.offsetHeight / 2;\n//     var tT = to.offsetTop + to.offsetHeight / 2;\n//     var fL = from.offsetLeft + from.offsetWidth / 2;\n//     var tL = to.offsetLeft + to.offsetWidth / 2;\n\n//     var CA = Math.abs(tT - fT);\n//     var CO = Math.abs(tL - fL);\n//     var H = Math.sqrt(CA * CA + CO * CO);\n//     var ANG = (180 / Math.PI) * Math.acos(CA / H);\n\n//     if (tT > fT) {\n//         var top = (tT - fT) / 2 + fT;\n//     } else {\n//         var top = (fT - tT) / 2 + tT;\n//     }\n//     if (tL > fL) {\n//         var left = (tL - fL) / 2 + fL;\n//     } else {\n//         var left = (fL - tL) / 2 + tL;\n//     }\n\n//     if (\n//         (fT < tT && fL < tL) ||\n//         (tT < fT && tL < fL) ||\n//         (fT > tT && fL > tL) ||\n//         (tT > fT && tL > fL)\n//     ) {\n//         ANG *= -1;\n//     }\n//     top -= H / 2;\n\n//     line.style['-webkit-transform'] = 'rotate(' + ANG + 'deg)';\n//     line.style['-moz-transform'] = 'rotate(' + ANG + 'deg)';\n//     line.style['-ms-transform'] = 'rotate(' + ANG + 'deg)';\n//     line.style['-o-transform'] = 'rotate(' + ANG + 'deg)';\n//     line.style['-transform'] = 'rotate(' + ANG + 'deg)';\n//     line.style.top = top + '%';\n//     line.style.left = left + '%';\n//     line.style.height = H + '%';\n// };\n"],"file":"connectors.min.js"}