{"version":3,"sources":["../src/chapters.js"],"names":["init","contextid","ModalFactory","create","type","types","SAVE_CANCEL","title","body","get_form","then","modal","trigger","document","getElementById","root","getRoot","addEventListener","event","preventDefault","show","on","ModalEvents","save","submitFormAjax","close","formdata","params","jsonformdata","JSON","stringify","Fragment","loadFragment","formData","find","serialize","Ajax","call","methodname","args"],"mappings":"sNAAA,OACA,OACA,OACA,O,mDAGO,GAAMA,CAAAA,CAAI,CAAG,SAACC,CAAD,CAAe,CAE/BC,UAAaC,MAAb,CAAoB,CAChBC,IAAI,CAAEF,UAAaG,KAAb,CAAmBC,WADT,CAEhBC,KAAK,CAAE,aAFS,CAGhBC,IAAI,CAAEC,CAAQ,CAAC,IAAD,CAAOR,CAAP,CAHE,CAApB,EAMCS,IAND,CAMM,SAASC,CAAT,CAAgB,IACZC,CAAAA,CAAO,CAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CADE,CAEZC,CAAI,CAAGJ,CAAK,CAACK,OAAN,EAFK,CAKlBJ,CAAO,CAACK,gBAAR,CAAyB,OAAzB,CAEA,SAAiBC,CAAjB,CAAwB,CACpBA,CAAK,CAACC,cAAN,GACAR,CAAK,CAACS,IAAN,EACH,CALD,EAOAL,CAAI,CAACM,EAAL,CAAQC,UAAYC,IAApB,CAA0B,SAASL,CAAT,CAAgB,CACtCM,CAAc,CAACN,CAAD,CAAQH,CAAR,CAAcd,CAAd,CACjB,CAFD,CAGH,CArBD,EAuBCS,IAvBD,CAuBM,SAASC,CAAT,CAAgB,CAClBA,CAAK,CAACc,KAAN,EACH,CAzBD,CA0BH,CA5BM,C,YA8BDhB,CAAAA,CAAQ,CAAG,SAACiB,CAAD,CAAWzB,CAAX,CAAyB,CACtC,GAAwB,WAApB,QAAOyB,CAAAA,CAAX,CAAqC,CACjCA,CAAQ,CAAG,EACd,CAED,GAAIC,CAAAA,CAAM,CAAG,CAACC,YAAY,CAAEC,IAAI,CAACC,SAAL,CAAeJ,CAAf,CAAf,CAAb,CACA,MAAOK,WAASC,YAAT,CAAsB,mBAAtB,CAA2C,cAA3C,CAA2D/B,CAA3D,CAAsE0B,CAAtE,CAEV,C,CAGKH,CAAc,CAAG,SAACN,CAAD,CAAQH,CAAR,CAAcd,CAAd,CAA4B,CAC/CiB,CAAK,CAACC,cAAN,GACA,GAAIc,CAAAA,CAAQ,CAAGlB,CAAI,CAACmB,IAAL,CAAU,MAAV,EAAkBC,SAAlB,EAAf,CACAC,UAAKC,IAAL,CAAU,CAAC,CACPC,UAAU,CAAE,kCADL,CAEPC,IAAI,CAAE,CAACtC,SAAS,CAAEA,CAAZ,CAAuB2B,YAAY,CAAEC,IAAI,CAACC,SAAL,CAAeG,CAAf,CAArC,CAFC,CAAD,CAAV,CAIH,C","sourcesContent":["import ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Fragment from 'core/fragment';\nimport Ajax from 'core/ajax';\n\n// The function called from the Mustache template.\nexport const init = (contextid) => {\n    // Set up a SAVE_CANCEL modal.\n    ModalFactory.create({\n        type: ModalFactory.types.SAVE_CANCEL,\n        title: 'Add Chapter',\n        body: get_form(null, contextid)\n    })\n    // Set up the actions.\n    .then(function(modal) {\n        const trigger = document.getElementById('add_chapter');\n        const root = modal.getRoot();\n        //const output = document.getElementById('mission_map');\n\n        trigger.addEventListener('click', confirm);\n\n        function confirm(event) {\n            event.preventDefault();\n            modal.show();\n        }\n\n        root.on(ModalEvents.save, function(event) {\n            submitFormAjax(event, root, contextid);\n        });\n    })\n    // Close modal\n    .then(function(modal) {\n        modal.close();\n    });\n};\n\nconst get_form = (formdata, contextid) => {\n    if (typeof formdata === \"undefined\") {\n        formdata = {};\n    }\n    // Get the content of the modal.\n    var params = {jsonformdata: JSON.stringify(formdata)};\n    return Fragment.loadFragment('block_mission_map', 'chapter_form', contextid, params);\n\n};\n\n/* eslint-disable */\nconst submitFormAjax = (event, root, contextid) => {\n    event.preventDefault();\n    let formData = root.find('form').serialize();\n    Ajax.call([{\n        methodname: 'block_mission_map_create_chapter',\n        args: {contextid: contextid, jsonformdata: JSON.stringify(formData)}\n    }]);\n};\n/* eslint-enable */"],"file":"chapters.min.js"}