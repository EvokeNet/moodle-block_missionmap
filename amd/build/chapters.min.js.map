{"version":3,"sources":["../src/chapters.js"],"names":["init","params","contextid","blockid","courseid","ModalFactory","create","type","types","SAVE_CANCEL","title","body","get_form","then","modal","add_trigger","document","getElementById","addEventListener","event","target","classList","contains","showModal","root","getRoot","form","find","on","ModalEvents","save","submitForm","submitFormAjax","close","formdata","jsonformdata","JSON","stringify","Fragment","loadFragment","isEditing","preventDefault","show","val","dataset","cid","cname","haslock","unlock","submit","formData","serialize","Ajax","call","methodname","args","done","data","handleFormSubmissionResponse","fail","handleFormSubmissionFailure","Notification","alert","parse","map","chapter","updated","location","reload","context","id","name","Template","render","html","js","appendNodeContents","hide","ex"],"mappings":"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","sourcesContent":["import ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Fragment from 'core/fragment';\nimport Ajax from 'core/ajax';\nimport Notification from 'core/notification';\nimport Template from 'core/templates';\n\n// The function called from the Mustache template.\nexport const init = (params) => {\n    const { contextid, blockid, courseid } = params;\n    // Set up a SAVE_CANCEL modal.\n    ModalFactory.create({\n        type: ModalFactory.types.SAVE_CANCEL,\n        title: 'Add Chapter',\n        body: get_form(null, contextid),\n    })\n        // Set up the listeners\n        .then((modal) => {\n            const add_trigger = document.getElementById('add_chapter');\n\n            document.addEventListener('click', (event) => {\n                if (\n                    event.target &&\n                    event.target.classList.contains('edit_chapter')\n                ) {\n                    showModal(event, modal, blockid, courseid, true);\n                }\n            });\n\n            const root = modal.getRoot();\n            const form = root.find('form');\n            add_trigger.addEventListener('click', (event) =>\n                showModal(event, modal, blockid, courseid)\n            );\n            root.on(ModalEvents.save, (event) => submitForm(event, form));\n            form.on('submit', (event) =>\n                submitFormAjax(event, modal, form, contextid)\n            );\n        })\n        // Close modal\n        .then((modal) => {\n            modal.close();\n        });\n};\n\nconst get_form = (formdata, contextid) => {\n    if (typeof formdata === 'undefined') {\n        formdata = {};\n    }\n    var params = { jsonformdata: JSON.stringify(formdata) };\n    return Fragment.loadFragment(\n        'block_mission_map',\n        'chapter_form',\n        contextid,\n        params\n    );\n};\n\nconst showModal = (event, modal, blockid, courseid, isEditing = false) => {\n    event.preventDefault();\n    modal.show();\n    let root = modal.getRoot();\n    root.find('form').find('input[name=\"blockid\"]').val(blockid);\n    root.find('form').find('input[name=\"courseid\"]').val(courseid);\n    if (isEditing) {\n        root.find('form')\n            .find('input[name=\"id\"]')\n            .val(event.target.dataset.cid);\n        root.find('form')\n            .find('input[name=\"name\"]')\n            .val(event.target.dataset.cname);\n        root.find('form')\n            .find('select[name=\"islocked\"]')\n            .val(event.target.dataset.haslock);\n        root.find('form')\n            .find('input[name=\"unlocking_date\"]')\n            .val(event.target.dataset.unlock);\n    }\n};\n\nconst submitForm = (event, form) => {\n    event.preventDefault();\n    form.submit();\n};\n\nconst submitFormAjax = (event, modal, form, contextid) => {\n    event.preventDefault();\n\n    // var changeEvent = document.createEvent('HTMLEvents');\n    // changeEvent.initEvent('change', true, true);\n\n    // form.find(':input').each((element) => {\n    //     element.dispatchEvent(changeEvent);\n    // });\n\n    let formData = form.serialize();\n    Ajax.call([\n        {\n            methodname: 'block_mission_map_create_chapter',\n            args: {\n                contextid: contextid,\n                jsonformdata: JSON.stringify(formData),\n            },\n            done: (data) => handleFormSubmissionResponse(data, modal),\n            fail: (data) => handleFormSubmissionFailure(data),\n        },\n    ]);\n};\n\nconst handleFormSubmissionFailure = (data) => {\n    Notification.alert('Warning', JSON.parse(data), 'Continue');\n};\n\n/**\n *   chapter {\n *       id: 0,\n *       name: 'ChapterName',\n *       timecreated: 0000000000,\n *       timemodified: 0000000000\n *   }\n **/\nconst handleFormSubmissionResponse = (data, modal) => {\n    const map = document.getElementById('mission_map');\n    let chapter = JSON.parse(data.data);\n\n    if (chapter.updated == true) {\n        // Ugly hack because TIME\n        location.reload();\n    } else {\n        let context = {\n            id: chapter.id,\n            name: chapter.name,\n        };\n\n        Template.render('block_mission_map/chapter', context)\n            .then((html, js) => {\n                Template.appendNodeContents(map, html, js);\n                modal.hide();\n            })\n            .fail((ex) => {\n                Notification.alert('Warning', ex, 'Continue');\n            });\n    }\n};\n"],"file":"chapters.min.js"}