{"version":3,"file":"chapters.min.js","sources":["../src/chapters.js"],"sourcesContent":["/* eslint-disable */\ndefine([\n        'jquery',\n        'core/str',\n        'core/modal_factory',\n        'core/modal_events',\n        'core/fragment',\n        'core/ajax',\n        'core/notification',\n        'core/templates'],\n    function($, Str, ModalFactory, ModalEvents, Fragment, Ajax, Notification, Template) {\n\n        var CreateChapter = function(params) {\n            const {contextid, blockid, courseid} = params;\n\n            this.contextid = contextid;\n\n            document.addEventListener('click', (event) => {\n                if (\n                    (event.target && event.target.classList.contains('edit_chapter')) ||\n                    event.target.id == 'add_chapter'\n                ) {\n                    event.preventDefault();\n\n                    this.init(event, blockid, courseid);\n                }\n            });\n        };\n\n        /**\n         * @var {Modal} modal\n         * @private\n         */\n        CreateChapter.prototype.modal = null;\n\n        /**\n         * @var {int} contextid\n         * @private\n         */\n        CreateChapter.prototype.contextid = -1;\n\n        /**\n         * @var {Modal} modal\n         * @private\n         */\n        CreateChapter.prototype.modal = null;\n\n        CreateChapter.prototype.init = function(event, blockid, courseid) {\n            const formdata = {\n                chapterid: event.target.dataset.cid,\n                blockid: blockid,\n                courseid: courseid,\n                name: event.target.dataset.cname,\n                has_lock: event.target.dataset.haslock,\n                unlocking_date: event.target.dataset.unlock,\n            };\n\n            return Str.get_string('add_chapter', 'block_mission_map').then(function(title) {\n                // Create the modal.\n                return ModalFactory.create({\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    title: title,\n                    body: this.getBody(formdata)\n                });\n            }.bind(this)).then(function(modal) {\n                // Keep a reference to the modal.\n                this.modal = modal;\n\n                // We want to reset the form every time it is opened.\n                this.modal.getRoot().on(ModalEvents.hidden, function() {\n                    this.modal.setBody(this.getBody(formdata));\n                }.bind(this));\n\n                // We want to hide the submit buttons every time it is opened.\n                this.modal.getRoot().on(ModalEvents.shown, function() {\n                    this.modal.getRoot().append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\n                }.bind(this));\n\n                // We catch the modal save event, and use it to submit the form inside the modal.\n                // Triggering a form submission will give JS validation scripts a chance to check for errors.\n                this.modal.getRoot().on(ModalEvents.save, this.submitForm.bind(this));\n                // We also catch the form submit event and use it to submit the form with ajax.\n                this.modal.getRoot().on('submit', 'form', this.submitFormAjax.bind(this));\n\n                this.modal.show();\n\n                return this.modal;\n            }.bind(this));\n        };\n\n        CreateChapter.prototype.getBody = function(formdata) {\n            if (typeof formdata === \"undefined\") {\n                formdata = {};\n            }\n\n            // Get the content of the modal.\n            var params = {jsonformdata: JSON.stringify(formdata)};\n\n            return Fragment.loadFragment('block_mission_map', 'chapter_form', this.contextid, params);\n        };\n\n        CreateChapter.prototype.handleFormSubmissionResponse = function(data) {\n            const map = document.getElementById('mission_map');\n            let chapter = JSON.parse(data.data);\n\n            if (chapter.updated == true) {\n                // Ugly hack because TIME\n                location.reload();\n            } else {\n                let context = {\n                    id: chapter.id,\n                    name: chapter.name,\n                };\n\n                Template.render('block_mission_map/chapter', context)\n                    .then((html, js) => {\n                        Template.appendNodeContents(map, html, js);\n                        this.modal.hide();\n                    })\n                    .fail((ex) => {\n                        Notification.alert('Warning', ex, 'Continue');\n                    });\n            }\n\n            this.modal.hide();\n        };\n\n        CreateChapter.prototype.handleFormSubmissionFailure = function(data) {\n            // Oh noes! Epic fail :(\n            // Ah wait - this is normal. We need to re-display the form with errors!\n            this.modal.setBody(this.getBody(data));\n        };\n\n        /**\n         * Private method\n         *\n         * @method submitFormAjax\n         *\n         * @private\n         *\n         * @param {Event} e Form submission event.\n         */\n        CreateChapter.prototype.submitFormAjax = function(e) {\n            // We don't want to do a real form submission.\n            e.preventDefault();\n\n            var changeEvent = document.createEvent('HTMLEvents');\n            changeEvent.initEvent('change', true, true);\n\n            // Prompt all inputs to run their validation functions.\n            // Normally this would happen when the form is submitted, but\n            // since we aren't submitting the form normally we need to run client side\n            // validation.\n            this.modal.getRoot().find(':input').each(function(index, element) {\n                element.dispatchEvent(changeEvent);\n            });\n\n            // Now the change events have run, see if there are any \"invalid\" form fields.\n            var invalid = $.merge(\n                this.modal.getRoot().find('[aria-invalid=\"true\"]'),\n                this.modal.getRoot().find('.error')\n            );\n\n            // If we found invalid fields, focus on the first one and do not submit via ajax.\n            if (invalid.length) {\n                invalid.first().focus();\n                return;\n            }\n\n            // Convert all the form elements values to a serialised string.\n            var formData = this.modal.getRoot().find('form').serialize();\n\n            // Now we can continue...\n            Ajax.call([{\n                methodname: 'block_mission_map_create_chapter',\n                args: {contextid: this.contextid, jsonformdata: JSON.stringify(formData)},\n                done: this.handleFormSubmissionResponse.bind(this),\n                fail: this.handleFormSubmissionFailure.bind(this, formData)\n            }]);\n        };\n\n        /**\n         * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n         *\n         * @method submitForm\n         * @param {Event} e Form submission event.\n         * @private\n         */\n        CreateChapter.prototype.submitForm = function(e) {\n            e.preventDefault();\n\n            this.modal.getRoot().find('form').submit();\n        };\n\n        return {\n            init: function(params) {\n                return new CreateChapter(params);\n            }\n        };\n    }\n);\n"],"names":["define","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","Notification","Template","CreateChapter","params","_this","this","contextid","blockid","courseid","document","addEventListener","event","target","classList","contains","id","preventDefault","init","prototype","modal","formdata","chapterid","dataset","cid","name","cname","has_lock","haslock","unlocking_date","unlock","get_string","then","title","create","type","types","SAVE_CANCEL","body","getBody","bind","getRoot","on","hidden","setBody","shown","append","save","submitForm","submitFormAjax","show","jsonformdata","JSON","stringify","loadFragment","handleFormSubmissionResponse","data","_this2","map","getElementById","chapter","parse","updated","location","reload","context","render","html","js","appendNodeContents","hide","fail","ex","alert","handleFormSubmissionFailure","e","changeEvent","createEvent","initEvent","find","each","index","element","dispatchEvent","invalid","merge","length","first","focus","formData","serialize","call","methodname","args","done","submit"],"mappings":"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"}